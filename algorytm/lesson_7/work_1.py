# 1). Отсортируйте по убыванию методом пузырька одномерный целочисленный массив, заданный
# случайными числами на промежутке [-100; 100). Выведите на экран исходный и отсортированный массивы.
# Примечания:
# ● алгоритм сортировки должен быть в виде функции, которая принимает на вход массив данных,
# ● постарайтесь сделать алгоритм умнее, но помните, что у вас должна остаться сортировка пузырьком.
# Улучшенные версии сортировки, например, расчёской, шейкерная и другие в зачёт не идут.

import random

SIZE = 10

array = [random.randint(-100, 99) for _ in range(SIZE)]


# если знаем размер списка
def bubble(lst):
    n = 0
    while n < SIZE - 1:
        for j in range(SIZE - n - 1):
            if lst[j] < lst[j + 1]:
                lst[j], lst[j + 1] = lst[j + 1], lst[j]
        n += 1
    return lst


# если не знаем размер списка(вариант предпочтительнее)
def bubble_ver_2(lst):
    for i in range(len(lst) - 1):
        for j in range(len(lst) - i - 1):  # вычитаем i т.к нет смысла проходить по уже отсортированным значениям
            if lst[j] < lst[j + 1]:
                lst[j], lst[j + 1] = lst[j + 1], lst[j]
    return lst


print(array)
print(bubble(array))
print(bubble_ver_2(array))
